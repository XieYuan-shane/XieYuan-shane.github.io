<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++ 初识</title>
      <link href="/2023/03/23/C++%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/03/23/C++%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="1-C-基础"><a href="#1-C-基础" class="headerlink" title="1.C++基础"></a>1.C++基础</h1><h2 id="1-1-注释"><a href="#1-1-注释" class="headerlink" title="1.1.注释"></a>1.1.注释</h2><p>两种格式</p><ol><li>单行注释：// 描述信息<blockquote><p>通常放在一行代码的上方，或者一条语句的末尾，对该行代码说明</p></blockquote></li><li>多行注释： /<em> 描述信息 </em>/<blockquote><p>通常放在一段代码的上方，对该段代码做整体说明</p></blockquote></li></ol><h2 id="1-2-常量"><a href="#1-2-常量" class="headerlink" title="1.2.常量"></a>1.2.常量</h2><p>常量<br>作用：用于记录程序中不可更改的数据</p><p>C++定义常量两种方式</p><ol><li><h1 id="define-宏常量：-define-常量名-常量值"><a href="#define-宏常量：-define-常量名-常量值" class="headerlink" title="define 宏常量： #define 常量名 常量值"></a>define 宏常量： #define 常量名 常量值</h1>通常在文件上方定义，表示一个常量<blockquote><p>编译预处理指令#define将PI定义为一个要被3.1415926替换的符号，此时PI不是一个变量，而是3.1415926的别名。在编译开始之前，只要程序中引用了PI，预处理器就会用#define指令中的值3.1415926来取代它。</p><p>宏常量的缺点就是：在被替换成文本之后，内存中有同一个替换文本的多份副本。</p></blockquote></li></ol><ol><li>const修饰的变量 const 数据类型 常量名 = 常量值<br>通常在变量定义前加关键字const，修饰该变量为常量，不可修改</li></ol><blockquote><p><strong>const常量与变量定义形式相同，只不过加上const修饰，告诉编译器，它的值是固定的，不能改变，编译器会帮着监督和检查。</strong><br><strong>例如</strong>：<br><strong>const double PI = 3.1415926；</strong><br><strong>const推出的目的就是为了取代宏常量，消除其缺点，同时继承其优点。</strong></p><p><strong>在编译的时候，由于const定义常量只是给出了对应的内存地址，而不是像#define给出的是替换文本，所以const定义的常量在程序运行过程中只有一份副本，而#define定义的常量在内存中有若干份副本。</strong><br><strong>宏常量在定义的时候没有分配内存，使用的时候进行替代分配内存</strong><br><strong>简单总结下：宏常量由于是在预处理部分将所有标识符替换成相应常量，所以在程序运行过程中，每使用一次宏常量，就需要在内存中创建一份副本，而const常量由于是给出了对应的内存地址，所以在程序运行过程中只需要使用该地址下的常量，只有这一份副本。</strong></p></blockquote><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//1、宏常量</span><br><span class="line">#define day 7</span><br><span class="line"></span><br><span class="line">//2、const修饰变量</span><br><span class="line">const int month = 12;</span><br></pre></td></tr></table></figure><h2 id="1-3-数据类型"><a href="#1-3-数据类型" class="headerlink" title="1.3.数据类型"></a>1.3.数据类型</h2><h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h3><p>作用：整型变量表示的是整数类型的数据</p><p>C++中能够表示整型的类型有以下几种方式，区别在于所占内存空间不同：</p><div class="table-container"><table><thead><tr><th>数据类型</th><th>占用空间</th><th>取值范围</th></tr></thead><tbody><tr><td>short</td><td>2字节</td><td>(-2^15 ~ 2^15-1)</td></tr><tr><td>int</td><td>4字节</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long</td><td>Windows为4字节，Linux为4字节(32位)，8字节(64位)</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long long</td><td>8字节</td><td>(-2^63 ~ 2^63-1)</td></tr></tbody></table></div><p><strong>sizeof关键字</strong><br><strong>作用：</strong>利用sizeof关键字可以统计数据类型所占内存大小</p><p>语法： sizeof( 数据类型 / 变量)</p><h3 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h3><div class="table-container"><table><thead><tr><th>数据类型</th><th>占用内存</th></tr></thead><tbody><tr><td>float</td><td>4字节</td></tr><tr><td>double</td><td>8字节</td></tr></tbody></table></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/20/test/"/>
      <url>/2023/03/20/test/</url>
      
        <content type="html"><![CDATA[<h2 id="C-初识"><a href="#C-初识" class="headerlink" title="C++ 初识"></a>C++ 初识</h2><p>注释<br>作用：在代码中加一些说明和解释，方便自己或其他程序员程序员阅读代码</p><p>两种格式</p><p>单行注释：// 描述信息<br>通常放在一行代码的上方，或者一条语句的末尾，对该行代码说明<br>多行注释： /<em> 描述信息 </em>/<br>通常放在一段代码的上方，对该段代码做整体说明</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/20/hello-world/"/>
      <url>/2023/03/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
